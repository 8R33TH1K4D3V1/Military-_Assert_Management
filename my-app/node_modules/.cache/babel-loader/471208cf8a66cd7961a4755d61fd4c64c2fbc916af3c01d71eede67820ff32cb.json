{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Military\\\\my-app\\\\src\\\\components\\\\AssignmentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AssignmentsPage.css';\n\n// Dummy data for initial state or fallback in case backend is not ready\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialDummyAssets = [{\n  id: 'AST001',\n  name: 'M16 Rifle',\n  status: 'Available'\n}, {\n  id: 'AST002',\n  name: 'Humvee',\n  status: 'Available'\n}, {\n  id: 'AST003',\n  name: 'Night Vision Goggles',\n  status: 'Available'\n}, {\n  id: 'AST004',\n  name: 'First Aid Kit',\n  status: 'Available'\n}];\nconst initialDummyPersonnel = [{\n  id: 'P001',\n  name: 'John Doe',\n  rank: 'Captain'\n}, {\n  id: 'P002',\n  name: 'Jane Smith',\n  rank: 'Sergeant'\n}, {\n  id: 'P003',\n  name: 'Mike Johnson',\n  rank: 'Specialist'\n}];\nexport default function AssignmentsPage() {\n  _s();\n  const API_BASE_URL = 'http://localhost:5000/api'; // Ensure this matches your backend port\n\n  // State for assets (fetched from backend, or initialDummyAssets as fallback)\n  const [assets, setAssets] = useState(initialDummyAssets);\n  // State for personnel (fetched from backend, or initialDummyPersonnel as fallback)\n  const [personnel, setPersonnel] = useState(initialDummyPersonnel);\n  // State for assigned assets (fetched from backend)\n  const [assignedAssets, setAssignedAssets] = useState([]);\n  const [assignmentForm, setAssignmentForm] = useState({\n    assetId: '',\n    // This will hold the custom ID (e.g., 'AST001')\n    personnelId: '',\n    // This will hold the custom ID (e.g., 'P001')\n    assignmentDate: ''\n  });\n\n  // --- Fetch Data on Component Mount and after actions ---\n  const fetchData = async () => {\n    try {\n      // Fetch Assets\n      const assetsResponse = await fetch(`${API_BASE_URL}/assignments/assets`); // Use the new asset route\n      if (!assetsResponse.ok) {\n        console.warn('Failed to fetch assets from backend, using dummy data.');\n        setAssets(initialDummyAssets);\n      } else {\n        const assetsData = await assetsResponse.json();\n        setAssets(assetsData);\n      }\n\n      // Fetch Personnel\n      const personnelResponse = await fetch(`${API_BASE_URL}/assignments/personnel`); // Use the new personnel route\n      if (!personnelResponse.ok) {\n        console.warn('Failed to fetch personnel from backend, using dummy data.');\n        setPersonnel(initialDummyPersonnel);\n      } else {\n        const personnelData = await personnelResponse.json();\n        setPersonnel(personnelData);\n      }\n\n      // Fetch Assignments\n      const assignmentsResponse = await fetch(`${API_BASE_URL}/assignments`);\n      if (!assignmentsResponse.ok) {\n        console.warn('Failed to fetch assignments from backend. Initializing as empty.');\n        setAssignedAssets([]);\n      } else {\n        const assignmentsData = await assignmentsResponse.json();\n        setAssignedAssets(assignmentsData);\n      }\n    } catch (error) {\n      console.error('Error during initial data fetch:', error);\n      alert('An error occurred while loading data. Please ensure the backend server and MongoDB are running.');\n      // Fallback to dummy data on critical error\n      setAssets(initialDummyAssets);\n      setPersonnel(initialDummyPersonnel);\n      setAssignedAssets([]);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  const handleAssignmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAssignmentForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // --- Handle Asset Assignment (POST request to backend) ---\n  const handleAssignAsset = async e => {\n    e.preventDefault();\n    const {\n      assetId,\n      personnelId,\n      assignmentDate\n    } = assignmentForm;\n    if (!assetId || !personnelId || !assignmentDate) {\n      alert('Please fill all assignment fields.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/assignments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          assetId,\n          personnelId,\n          assignmentDate\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to assign asset.');\n      }\n\n      // After successful assignment, re-fetch all data to ensure consistency\n      // This is simpler than manually updating multiple state slices\n      await fetchData();\n      setAssignmentForm({\n        assetId: '',\n        personnelId: '',\n        assignmentDate: ''\n      });\n      alert(data.message); // Show success message from backend\n    } catch (error) {\n      console.error('Error assigning asset:', error);\n      alert(`Error: ${error.message}`); // Show error message to user\n    }\n  };\n\n  // --- Handle Asset Return (PUT request to backend) ---\n  const handleReturnAsset = async assignmentId => {\n    if (!window.confirm('Are you sure you want to mark this asset as returned?')) {\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/assignments/${assignmentId}/return`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to return asset.');\n      }\n\n      // After successful return, re-fetch all data to ensure consistency\n      await fetchData();\n      alert(data.message); // Show success message from backend\n    } catch (error) {\n      console.error('Error returning asset:', error);\n      alert(`Error: ${error.message}`); // Show error message to user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"clipboard\",\n        children: \"\\uD83D\\uDCDD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), \" Asset Assignments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"assignment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDE4B\\u200D\\u2642\\uFE0F Assign Asset to Personnel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAssignAsset,\n        className: \"asset-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"assignAssetId\",\n              children: \"Asset:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"assignAssetId\",\n              name: \"assetId\",\n              value: assignmentForm.assetId,\n              onChange: handleAssignmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Asset --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), assets.filter(asset => asset.status === 'Available').map(asset => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: asset.id,\n                children: [asset.name, \" (ID: \", asset.id, \") - \", asset.status]\n              }, asset.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"personnelId\",\n              children: \"Personnel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"personnelId\",\n              name: \"personnelId\",\n              value: assignmentForm.personnelId,\n              onChange: handleAssignmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Personnel --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), personnel.map(person => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: person.id,\n                children: [person.name, \" (Rank: \", person.rank, \")\"]\n              }, person.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"assignmentDate\",\n              children: \"Assignment Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"assignmentDate\",\n              name: \"assignmentDate\",\n              value: assignmentForm.assignmentDate,\n              onChange: handleAssignmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Assign Asset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sub-section-title\",\n        children: \"Current Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), assignedAssets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-state\",\n        children: \"No assets currently assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignments-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Asset ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assigned To\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignment Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Return Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: assignedAssets.map(assignment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.asset ? assignment.asset.id : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.asset ? assignment.asset.name : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.personnel ? assignment.personnel.name : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.personnel ? assignment.personnel.rank : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(assignment.assignmentDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.returnDate ? new Date(assignment.returnDate).toLocaleDateString() : 'Pending'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: !assignment.returnDate &&\n                /*#__PURE__*/\n                // Show button only if not yet returned\n                _jsxDEV(\"button\", {\n                  className: \"return-button\",\n                  onClick: () => handleReturnAsset(assignment._id),\n                  children: \"Return\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this)]\n            }, assignment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n_s(AssignmentsPage, \"Vp7GfxbSU7OP09/TzzSdPHLt4OY=\");\n_c = AssignmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialDummyAssets","id","name","status","initialDummyPersonnel","rank","AssignmentsPage","_s","API_BASE_URL","assets","setAssets","personnel","setPersonnel","assignedAssets","setAssignedAssets","assignmentForm","setAssignmentForm","assetId","personnelId","assignmentDate","fetchData","assetsResponse","fetch","ok","console","warn","assetsData","json","personnelResponse","personnelData","assignmentsResponse","assignmentsData","error","alert","handleAssignmentChange","e","value","target","prev","handleAssignAsset","preventDefault","response","method","headers","body","JSON","stringify","data","Error","message","handleReturnAsset","assignmentId","window","confirm","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","filter","asset","map","person","type","length","assignment","Date","toLocaleDateString","returnDate","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Military/my-app/src/components/AssignmentsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AssignmentsPage.css';\r\n\r\n// Dummy data for initial state or fallback in case backend is not ready\r\nconst initialDummyAssets = [\r\n    { id: 'AST001', name: 'M16 Rifle', status: 'Available' },\r\n    { id: 'AST002', name: 'Humvee', status: 'Available' },\r\n    { id: 'AST003', name: 'Night Vision Goggles', status: 'Available' },\r\n    { id: 'AST004', name: 'First Aid Kit', status: 'Available' },\r\n];\r\n\r\nconst initialDummyPersonnel = [\r\n    { id: 'P001', name: 'John Doe', rank: 'Captain' },\r\n    { id: 'P002', name: 'Jane Smith', rank: 'Sergeant' },\r\n    { id: 'P003', name: 'Mike Johnson', rank: 'Specialist' },\r\n];\r\n\r\nexport default function AssignmentsPage() {\r\n    const API_BASE_URL = 'http://localhost:5000/api'; // Ensure this matches your backend port\r\n\r\n    // State for assets (fetched from backend, or initialDummyAssets as fallback)\r\n    const [assets, setAssets] = useState(initialDummyAssets);\r\n    // State for personnel (fetched from backend, or initialDummyPersonnel as fallback)\r\n    const [personnel, setPersonnel] = useState(initialDummyPersonnel);\r\n    // State for assigned assets (fetched from backend)\r\n    const [assignedAssets, setAssignedAssets] = useState([]);\r\n\r\n    const [assignmentForm, setAssignmentForm] = useState({\r\n        assetId: '',       // This will hold the custom ID (e.g., 'AST001')\r\n        personnelId: '',   // This will hold the custom ID (e.g., 'P001')\r\n        assignmentDate: '',\r\n    });\r\n\r\n    // --- Fetch Data on Component Mount and after actions ---\r\n    const fetchData = async () => {\r\n        try {\r\n            // Fetch Assets\r\n            const assetsResponse = await fetch(`${API_BASE_URL}/assignments/assets`); // Use the new asset route\r\n            if (!assetsResponse.ok) {\r\n                console.warn('Failed to fetch assets from backend, using dummy data.');\r\n                setAssets(initialDummyAssets);\r\n            } else {\r\n                const assetsData = await assetsResponse.json();\r\n                setAssets(assetsData);\r\n            }\r\n\r\n            // Fetch Personnel\r\n            const personnelResponse = await fetch(`${API_BASE_URL}/assignments/personnel`); // Use the new personnel route\r\n            if (!personnelResponse.ok) {\r\n                console.warn('Failed to fetch personnel from backend, using dummy data.');\r\n                setPersonnel(initialDummyPersonnel);\r\n            } else {\r\n                const personnelData = await personnelResponse.json();\r\n                setPersonnel(personnelData);\r\n            }\r\n\r\n            // Fetch Assignments\r\n            const assignmentsResponse = await fetch(`${API_BASE_URL}/assignments`);\r\n            if (!assignmentsResponse.ok) {\r\n                console.warn('Failed to fetch assignments from backend. Initializing as empty.');\r\n                setAssignedAssets([]);\r\n            } else {\r\n                const assignmentsData = await assignmentsResponse.json();\r\n                setAssignedAssets(assignmentsData);\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Error during initial data fetch:', error);\r\n            alert('An error occurred while loading data. Please ensure the backend server and MongoDB are running.');\r\n            // Fallback to dummy data on critical error\r\n            setAssets(initialDummyAssets);\r\n            setPersonnel(initialDummyPersonnel);\r\n            setAssignedAssets([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []); // Empty dependency array means this runs once on mount\r\n\r\n    const handleAssignmentChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setAssignmentForm(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // --- Handle Asset Assignment (POST request to backend) ---\r\n    const handleAssignAsset = async (e) => {\r\n        e.preventDefault();\r\n        const { assetId, personnelId, assignmentDate } = assignmentForm;\r\n\r\n        if (!assetId || !personnelId || !assignmentDate) {\r\n            alert('Please fill all assignment fields.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/assignments`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ assetId, personnelId, assignmentDate }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Failed to assign asset.');\r\n            }\r\n\r\n            // After successful assignment, re-fetch all data to ensure consistency\r\n            // This is simpler than manually updating multiple state slices\r\n            await fetchData();\r\n\r\n            setAssignmentForm({ assetId: '', personnelId: '', assignmentDate: '' });\r\n            alert(data.message); // Show success message from backend\r\n\r\n        } catch (error) {\r\n            console.error('Error assigning asset:', error);\r\n            alert(`Error: ${error.message}`); // Show error message to user\r\n        }\r\n    };\r\n\r\n    // --- Handle Asset Return (PUT request to backend) ---\r\n    const handleReturnAsset = async (assignmentId) => {\r\n        if (!window.confirm('Are you sure you want to mark this asset as returned?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/assignments/${assignmentId}/return`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Failed to return asset.');\r\n            }\r\n\r\n            // After successful return, re-fetch all data to ensure consistency\r\n            await fetchData();\r\n\r\n            alert(data.message); // Show success message from backend\r\n\r\n        } catch (error) {\r\n            console.error('Error returning asset:', error);\r\n            alert(`Error: ${error.message}`); // Show error message to user\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"assignments-page\">\r\n            <h1 className=\"page-title\">\r\n                <span role=\"img\" aria-label=\"clipboard\">📝</span> Asset Assignments\r\n            </h1>\r\n\r\n            <section className=\"assignment-section\">\r\n                <h2 className=\"section-title\">🙋‍♂️ Assign Asset to Personnel</h2>\r\n                <form onSubmit={handleAssignAsset} className=\"asset-form\">\r\n                    <div className=\"form-grid\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"assignAssetId\">Asset:</label>\r\n                            <select\r\n                                id=\"assignAssetId\"\r\n                                name=\"assetId\"\r\n                                value={assignmentForm.assetId}\r\n                                onChange={handleAssignmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select Asset --</option>\r\n                                {/* Filter available assets for assignment */}\r\n                                {assets.filter(asset => asset.status === 'Available').map(asset => (\r\n                                    <option key={asset.id} value={asset.id}>\r\n                                        {asset.name} (ID: {asset.id}) - {asset.status}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"personnelId\">Personnel:</label>\r\n                            <select\r\n                                id=\"personnelId\"\r\n                                name=\"personnelId\"\r\n                                value={assignmentForm.personnelId}\r\n                                onChange={handleAssignmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select Personnel --</option>\r\n                                {personnel.map(person => (\r\n                                    <option key={person.id} value={person.id}>\r\n                                        {person.name} (Rank: {person.rank})\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"assignmentDate\">Assignment Date:</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"assignmentDate\"\r\n                                name=\"assignmentDate\"\r\n                                value={assignmentForm.assignmentDate}\r\n                                onChange={handleAssignmentChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">Assign Asset</button>\r\n                </form>\r\n\r\n                <h3 className=\"sub-section-title\">Current Assignments</h3>\r\n                {assignedAssets.length === 0 ? (\r\n                    <p className=\"empty-state\">No assets currently assigned.</p>\r\n                ) : (\r\n                    <div className=\"assignments-table-container\">\r\n                        <table className=\"data-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Asset ID</th>\r\n                                    <th>Asset Name</th>\r\n                                    <th>Assigned To</th>\r\n                                    <th>Rank</th>\r\n                                    <th>Assignment Date</th>\r\n                                    <th>Return Date</th> {/* New column for return date */}\r\n                                    <th>Actions</th> {/* New column for actions */}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {assignedAssets.map(assignment => (\r\n                                    <tr key={assignment._id}>\r\n                                        <td>{assignment.asset ? assignment.asset.id : 'N/A'}</td>\r\n                                        <td>{assignment.asset ? assignment.asset.name : 'N/A'}</td>\r\n                                        <td>{assignment.personnel ? assignment.personnel.name : 'N/A'}</td>\r\n                                        <td>{assignment.personnel ? assignment.personnel.rank : 'N/A'}</td>\r\n                                        <td>{new Date(assignment.assignmentDate).toLocaleDateString()}</td>\r\n                                        <td>\r\n                                            {assignment.returnDate\r\n                                                ? new Date(assignment.returnDate).toLocaleDateString()\r\n                                                : 'Pending'}\r\n                                        </td>\r\n                                        <td>\r\n                                            {!assignment.returnDate && ( // Show button only if not yet returned\r\n                                                <button\r\n                                                    className=\"return-button\"\r\n                                                    onClick={() => handleReturnAsset(assignment._id)}\r\n                                                >\r\n                                                    Return\r\n                                                </button>\r\n                                            )}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </section>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Military\\\\my-app\\\\src\\\\components\\\\AssignmentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AssignmentsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialDummyAssets = [{\n  id: 'AST001',\n  name: 'M16 Rifle',\n  status: 'Available'\n}, {\n  id: 'AST002',\n  name: 'Humvee',\n  status: 'Available'\n}, {\n  id: 'AST003',\n  name: 'Night Vision Goggles',\n  status: 'Available'\n}, {\n  id: 'AST004',\n  name: 'First Aid Kit',\n  status: 'Available'\n}];\nconst initialDummyPersonnel = [{\n  id: 'P001',\n  name: 'John Doe',\n  rank: 'Captain'\n}, {\n  id: 'P002',\n  name: 'Jane Smith',\n  rank: 'Sergeant'\n}, {\n  id: 'P003',\n  name: 'Mike Johnson',\n  rank: 'Specialist'\n}];\nexport default function AssignmentsPage() {\n  _s();\n  const API_BASE_URL = 'http://localhost:5000/api';\n  const [assets, setAssets] = useState(initialDummyAssets);\n  const [personnel, setPersonnel] = useState(initialDummyPersonnel);\n  const [assignedAssets, setAssignedAssets] = useState([]);\n  const [assignmentForm, setAssignmentForm] = useState({\n    assetId: '',\n    personnelId: '',\n    assignmentDate: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const assetsResponse = await fetch(`${API_BASE_URL}/assets`);\n        if (assetsResponse.ok) {\n          const assetsData = await assetsResponse.json();\n          setAssets(assetsData);\n        }\n        const personnelResponse = await fetch(`${API_BASE_URL}/personnel`);\n        if (personnelResponse.ok) {\n          const personnelData = await personnelResponse.json();\n          setPersonnel(personnelData);\n        }\n        const assignmentsResponse = await fetch(`${API_BASE_URL}/assignments`);\n        if (assignmentsResponse.ok) {\n          const assignmentsData = await assignmentsResponse.json();\n          setAssignedAssets(assignmentsData);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        alert('An error occurred while loading data. Please ensure the backend server and MongoDB are running.');\n      }\n    };\n    fetchData();\n  }, []);\n  const handleAssignmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAssignmentForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAssignAsset = async e => {\n    e.preventDefault();\n    const {\n      assetId,\n      personnelId,\n      assignmentDate\n    } = assignmentForm;\n    if (!assetId || !personnelId || !assignmentDate) {\n      alert('Please fill all assignment fields.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/assignments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          assetId,\n          personnelId,\n          assignmentDate\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to assign asset.');\n      }\n      setAssignedAssets(prev => [...prev, data.assignment]);\n      setAssets(prev => prev.map(a => a.id === assetId ? {\n        ...a,\n        status: 'Assigned'\n      } : a));\n      setAssignmentForm({\n        assetId: '',\n        personnelId: '',\n        assignmentDate: ''\n      });\n      alert(data.message);\n    } catch (error) {\n      console.error('Error assigning asset:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: \"\\uD83D\\uDCDD Asset Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"assignment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDE4B\\u200D\\u2642\\uFE0F Assign Asset to Personnel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAssignAsset,\n        className: \"asset-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"assignAssetId\",\n              children: \"Asset:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"assignAssetId\",\n              name: \"assetId\",\n              value: assignmentForm.assetId,\n              onChange: handleAssignmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Asset --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), assets.filter(asset => asset.status === 'Available').map(asset => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: asset.id,\n                children: [asset.name, \" (ID: \", asset.id, \") - \", asset.status]\n              }, asset.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"personnelId\",\n              children: \"Personnel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"personnelId\",\n              name: \"personnelId\",\n              value: assignmentForm.personnelId,\n              onChange: handleAssignmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Personnel --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), personnel.map(person => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: person.id,\n                children: [person.name, \" (Rank: \", person.rank, \")\"]\n              }, person.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"assignmentDate\",\n              children: \"Assignment Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"assignmentDate\",\n              name: \"assignmentDate\",\n              value: assignmentForm.assignmentDate,\n              onChange: handleAssignmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Assign Asset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sub-section-title\",\n        children: \"Current Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), assignedAssets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-state\",\n        children: \"No assets currently assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignments-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Asset ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assigned To\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignment Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: assignedAssets.map(assignment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.asset.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.asset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.personnel.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.personnel.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(assignment.assignmentDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, assignment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(AssignmentsPage, \"92CL4iLzfsHyD8UCTgERLXrNto8=\");\n_c = AssignmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialDummyAssets","id","name","status","initialDummyPersonnel","rank","AssignmentsPage","_s","API_BASE_URL","assets","setAssets","personnel","setPersonnel","assignedAssets","setAssignedAssets","assignmentForm","setAssignmentForm","assetId","personnelId","assignmentDate","fetchData","assetsResponse","fetch","ok","assetsData","json","personnelResponse","personnelData","assignmentsResponse","assignmentsData","error","console","alert","handleAssignmentChange","e","value","target","prev","handleAssignAsset","preventDefault","response","method","headers","body","JSON","stringify","data","Error","message","assignment","map","a","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","filter","asset","person","type","length","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Military/my-app/src/components/AssignmentsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AssignmentsPage.css';\r\n\r\nconst initialDummyAssets = [\r\n  { id: 'AST001', name: 'M16 Rifle', status: 'Available' },\r\n  { id: 'AST002', name: 'Humvee', status: 'Available' },\r\n  { id: 'AST003', name: 'Night Vision Goggles', status: 'Available' },\r\n  { id: 'AST004', name: 'First Aid Kit', status: 'Available' },\r\n];\r\n\r\nconst initialDummyPersonnel = [\r\n  { id: 'P001', name: 'John Doe', rank: 'Captain' },\r\n  { id: 'P002', name: 'Jane Smith', rank: 'Sergeant' },\r\n  { id: 'P003', name: 'Mike Johnson', rank: 'Specialist' },\r\n];\r\n\r\nexport default function AssignmentsPage() {\r\n  const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n  const [assets, setAssets] = useState(initialDummyAssets);\r\n  const [personnel, setPersonnel] = useState(initialDummyPersonnel);\r\n  const [assignedAssets, setAssignedAssets] = useState([]);\r\n\r\n  const [assignmentForm, setAssignmentForm] = useState({\r\n    assetId: '',\r\n    personnelId: '',\r\n    assignmentDate: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const assetsResponse = await fetch(`${API_BASE_URL}/assets`);\r\n        if (assetsResponse.ok) {\r\n          const assetsData = await assetsResponse.json();\r\n          setAssets(assetsData);\r\n        }\r\n\r\n        const personnelResponse = await fetch(`${API_BASE_URL}/personnel`);\r\n        if (personnelResponse.ok) {\r\n          const personnelData = await personnelResponse.json();\r\n          setPersonnel(personnelData);\r\n        }\r\n\r\n        const assignmentsResponse = await fetch(`${API_BASE_URL}/assignments`);\r\n        if (assignmentsResponse.ok) {\r\n          const assignmentsData = await assignmentsResponse.json();\r\n          setAssignedAssets(assignmentsData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        alert('An error occurred while loading data. Please ensure the backend server and MongoDB are running.');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAssignmentChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAssignmentForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAssignAsset = async (e) => {\r\n    e.preventDefault();\r\n    const { assetId, personnelId, assignmentDate } = assignmentForm;\r\n\r\n    if (!assetId || !personnelId || !assignmentDate) {\r\n      alert('Please fill all assignment fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/assignments`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ assetId, personnelId, assignmentDate }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Failed to assign asset.');\r\n      }\r\n\r\n      setAssignedAssets((prev) => [...prev, data.assignment]);\r\n      setAssets((prev) =>\r\n        prev.map((a) => (a.id === assetId ? { ...a, status: 'Assigned' } : a))\r\n      );\r\n      setAssignmentForm({ assetId: '', personnelId: '', assignmentDate: '' });\r\n      alert(data.message);\r\n    } catch (error) {\r\n      console.error('Error assigning asset:', error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"assignments-page\">\r\n      <h1 className=\"page-title\">📝 Asset Assignments</h1>\r\n\r\n      <section className=\"assignment-section\">\r\n        <h2 className=\"section-title\">🙋‍♂️ Assign Asset to Personnel</h2>\r\n        <form onSubmit={handleAssignAsset} className=\"asset-form\">\r\n          <div className=\"form-grid\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"assignAssetId\">Asset:</label>\r\n              <select\r\n                id=\"assignAssetId\"\r\n                name=\"assetId\"\r\n                value={assignmentForm.assetId}\r\n                onChange={handleAssignmentChange}\r\n                required\r\n              >\r\n                <option value=\"\">-- Select Asset --</option>\r\n                {assets\r\n                  .filter((asset) => asset.status === 'Available')\r\n                  .map((asset) => (\r\n                    <option key={asset.id} value={asset.id}>\r\n                      {asset.name} (ID: {asset.id}) - {asset.status}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"personnelId\">Personnel:</label>\r\n              <select\r\n                id=\"personnelId\"\r\n                name=\"personnelId\"\r\n                value={assignmentForm.personnelId}\r\n                onChange={handleAssignmentChange}\r\n                required\r\n              >\r\n                <option value=\"\">-- Select Personnel --</option>\r\n                {personnel.map((person) => (\r\n                  <option key={person.id} value={person.id}>\r\n                    {person.name} (Rank: {person.rank})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"assignmentDate\">Assignment Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"assignmentDate\"\r\n                name=\"assignmentDate\"\r\n                value={assignmentForm.assignmentDate}\r\n                onChange={handleAssignmentChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Assign Asset\r\n          </button>\r\n        </form>\r\n\r\n        <h3 className=\"sub-section-title\">Current Assignments</h3>\r\n        {assignedAssets.length === 0 ? (\r\n          <p className=\"empty-state\">No assets currently assigned.</p>\r\n        ) : (\r\n          <div className=\"assignments-table-container\">\r\n            <table className=\"data-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Asset ID</th>\r\n                  <th>Asset Name</th>\r\n                  <th>Assigned To</th>\r\n                  <th>Rank</th>\r\n                  <th>Assignment Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {assignedAssets.map((assignment) => (\r\n                  <tr key={assignment._id}>\r\n                    <td>{assignment.asset.id}</td>\r\n                    <td>{assignment.asset.name}</td>\r\n                    <td>{assignment.personnel.name}</td>\r\n                    <td>{assignment.personnel.rank}</td>\r\n                    <td>\r\n                      {new Date(assignment.assignmentDate).toLocaleDateString()}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
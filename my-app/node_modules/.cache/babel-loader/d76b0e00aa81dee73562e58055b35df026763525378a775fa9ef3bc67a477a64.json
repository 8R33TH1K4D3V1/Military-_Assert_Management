{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Military\\\\my-app\\\\src\\\\components\\\\AssignmentsPage.js\",\n  _s = $RefreshSig$();\n// src/components/AssignmentsPage.js\nimport React, { useState, useEffect } from 'react';\nimport './AssignmentsPage.css'; // Make sure this CSS import is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AssignmentsPage() {\n  _s();\n  const API_BASE_URL = 'http://localhost:5000/api'; // Ensure this matches your backend port\n\n  // State for assets (fetched from backend)\n  const [assets, setAssets] = useState([]);\n  // State for personnel (fetched from backend)\n  const [personnel, setPersonnel] = useState([]);\n  // State for assigned assets (fetched from backend)\n  const [assignedAssets, setAssignedAssets] = useState([]);\n  const [assignmentForm, setAssignmentForm] = useState({\n    assetId: '',\n    // This will hold the custom ID (e.g., 'AST001')\n    personnelId: '',\n    // This will hold the custom ID (e.g., 'P001')\n    assignmentDate: ''\n  });\n\n  // --- Fetch Data on Component Mount ---\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch Assets\n        const assetsResponse = await fetch(`${API_BASE_URL}/assets`);\n        if (!assetsResponse.ok) throw new Error('Failed to fetch assets');\n        const assetsData = await assetsResponse.json();\n        setAssets(assetsData);\n\n        // Fetch Personnel\n        const personnelResponse = await fetch(`${API_BASE_URL}/personnel`);\n        if (!personnelResponse.ok) throw new Error('Failed to fetch personnel');\n        const personnelData = await personnelResponse.json();\n        setPersonnel(personnelData);\n\n        // Fetch Assignments\n        const assignmentsResponse = await fetch(`${API_BASE_URL}/assignments`);\n        if (!assignmentsResponse.ok) throw new Error('Failed to fetch assignments');\n        const assignmentsData = await assignmentsResponse.json();\n        setAssignedAssets(assignmentsData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        alert('Failed to load data. Please check the backend server and MongoDB connection.');\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array means this runs once on mount\n\n  const handleAssignmentChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAssignmentForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // --- Handle Asset Assignment (POST request to backend) ---\n  const handleAssignAsset = async e => {\n    e.preventDefault();\n    const {\n      assetId,\n      personnelId,\n      assignmentDate\n    } = assignmentForm;\n    if (!assetId || !personnelId || !assignmentDate) {\n      alert('Please fill all assignment fields.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/assignments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          assetId,\n          personnelId,\n          assignmentDate\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        // If response is not OK (e.g., 400, 404, 500)\n        throw new Error(data.message || 'Failed to assign asset.');\n      }\n\n      // Update local state after successful assignment\n      // The backend sends back the fully populated assignment object, use that.\n      setAssignedAssets(prev => [...prev, data.assignment]);\n\n      // Update the status of the specific asset in the frontend state\n      setAssets(prev => prev.map(a => a.id === assetId ? {\n        ...a,\n        status: 'Assigned'\n      } : a));\n      setAssignmentForm({\n        assetId: '',\n        personnelId: '',\n        assignmentDate: ''\n      });\n      alert(data.message); // Show success message from backend\n    } catch (error) {\n      console.error('Error assigning asset:', error);\n      alert(`Error: ${error.message}`); // Show error message to user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"clipboard\",\n        children: \"\\uD83D\\uDCDD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), \" Asset Assignments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"assignment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"\\uD83D\\uDE4B\\u200D\\u2642\\uFE0F Assign Asset to Personnel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAssignAsset,\n        className: \"asset-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"assignAssetId\",\n              children: \"Asset:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"assignAssetId\",\n              name: \"assetId\",\n              value: assignmentForm.assetId,\n              onChange: handleAssignmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Asset --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), assets.filter(asset => asset.status === 'Available').map(asset => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: asset.id,\n                children: [asset.name, \" (\", asset.id, \") - \", asset.status]\n              }, asset.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"personnelId\",\n              children: \"Personnel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"personnelId\",\n              name: \"personnelId\",\n              value: assignmentForm.personnelId,\n              onChange: handleAssignmentChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select Personnel --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), personnel.map(person => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: person.id,\n                children: [person.name, \" (\", person.rank, \")\"]\n              }, person.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"assignmentDate\",\n              children: \"Assignment Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"assignmentDate\",\n              name: \"assignmentDate\",\n              value: assignmentForm.assignmentDate,\n              onChange: handleAssignmentChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Assign Asset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sub-section-title\",\n        children: \"Current Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), assignedAssets.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-state\",\n        children: \"No assets currently assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignments-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Asset ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Asset Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assigned To\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Assignment Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: assignedAssets.map(assignment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.asset.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.asset.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.personnel.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: assignment.personnel.rank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(assignment.assignmentDate).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), \" \"]\n            }, assignment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(AssignmentsPage, \"qlAY3EDQPwP9Tr4E4CyH5rE9nLo=\");\n_c = AssignmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AssignmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AssignmentsPage","_s","API_BASE_URL","assets","setAssets","personnel","setPersonnel","assignedAssets","setAssignedAssets","assignmentForm","setAssignmentForm","assetId","personnelId","assignmentDate","fetchData","assetsResponse","fetch","ok","Error","assetsData","json","personnelResponse","personnelData","assignmentsResponse","assignmentsData","error","console","alert","handleAssignmentChange","e","name","value","target","prev","handleAssignAsset","preventDefault","response","method","headers","body","JSON","stringify","data","message","assignment","map","a","id","status","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","filter","asset","person","rank","type","length","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Military/my-app/src/components/AssignmentsPage.js"],"sourcesContent":["// src/components/AssignmentsPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './AssignmentsPage.css'; // Make sure this CSS import is correct\r\n\r\nexport default function AssignmentsPage() {\r\n    const API_BASE_URL = 'http://localhost:5000/api'; // Ensure this matches your backend port\r\n\r\n    // State for assets (fetched from backend)\r\n    const [assets, setAssets] = useState([]);\r\n    // State for personnel (fetched from backend)\r\n    const [personnel, setPersonnel] = useState([]);\r\n    // State for assigned assets (fetched from backend)\r\n    const [assignedAssets, setAssignedAssets] = useState([]);\r\n\r\n    const [assignmentForm, setAssignmentForm] = useState({\r\n        assetId: '',       // This will hold the custom ID (e.g., 'AST001')\r\n        personnelId: '',   // This will hold the custom ID (e.g., 'P001')\r\n        assignmentDate: '',\r\n    });\r\n\r\n    // --- Fetch Data on Component Mount ---\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Fetch Assets\r\n                const assetsResponse = await fetch(`${API_BASE_URL}/assets`);\r\n                if (!assetsResponse.ok) throw new Error('Failed to fetch assets');\r\n                const assetsData = await assetsResponse.json();\r\n                setAssets(assetsData);\r\n\r\n                // Fetch Personnel\r\n                const personnelResponse = await fetch(`${API_BASE_URL}/personnel`);\r\n                if (!personnelResponse.ok) throw new Error('Failed to fetch personnel');\r\n                const personnelData = await personnelResponse.json();\r\n                setPersonnel(personnelData);\r\n\r\n                // Fetch Assignments\r\n                const assignmentsResponse = await fetch(`${API_BASE_URL}/assignments`);\r\n                if (!assignmentsResponse.ok) throw new Error('Failed to fetch assignments');\r\n                const assignmentsData = await assignmentsResponse.json();\r\n                setAssignedAssets(assignmentsData);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                alert('Failed to load data. Please check the backend server and MongoDB connection.');\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []); // Empty dependency array means this runs once on mount\r\n\r\n    const handleAssignmentChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setAssignmentForm(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    // --- Handle Asset Assignment (POST request to backend) ---\r\n    const handleAssignAsset = async (e) => {\r\n        e.preventDefault();\r\n        const { assetId, personnelId, assignmentDate } = assignmentForm;\r\n\r\n        if (!assetId || !personnelId || !assignmentDate) {\r\n            alert('Please fill all assignment fields.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/assignments`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ assetId, personnelId, assignmentDate }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                // If response is not OK (e.g., 400, 404, 500)\r\n                throw new Error(data.message || 'Failed to assign asset.');\r\n            }\r\n\r\n            // Update local state after successful assignment\r\n            // The backend sends back the fully populated assignment object, use that.\r\n            setAssignedAssets(prev => [...prev, data.assignment]);\r\n\r\n            // Update the status of the specific asset in the frontend state\r\n            setAssets(prev =>\r\n                prev.map(a =>\r\n                    a.id === assetId ? { ...a, status: 'Assigned' } : a\r\n                )\r\n            );\r\n            setAssignmentForm({ assetId: '', personnelId: '', assignmentDate: '' });\r\n            alert(data.message); // Show success message from backend\r\n\r\n        } catch (error) {\r\n            console.error('Error assigning asset:', error);\r\n            alert(`Error: ${error.message}`); // Show error message to user\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"assignments-page\">\r\n            <h1 className=\"page-title\">\r\n                <span role=\"img\" aria-label=\"clipboard\">📝</span> Asset Assignments\r\n            </h1>\r\n\r\n            <section className=\"assignment-section\">\r\n                <h2 className=\"section-title\">🙋‍♂️ Assign Asset to Personnel</h2>\r\n                <form onSubmit={handleAssignAsset} className=\"asset-form\">\r\n                    <div className=\"form-grid\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"assignAssetId\">Asset:</label>\r\n                            <select\r\n                                id=\"assignAssetId\"\r\n                                name=\"assetId\"\r\n                                value={assignmentForm.assetId}\r\n                                onChange={handleAssignmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select Asset --</option>\r\n                                {/* Filter available assets for assignment */}\r\n                                {assets.filter(asset => asset.status === 'Available').map(asset => (\r\n                                    <option key={asset.id} value={asset.id}>\r\n                                        {asset.name} ({asset.id}) - {asset.status}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"personnelId\">Personnel:</label>\r\n                            <select\r\n                                id=\"personnelId\"\r\n                                name=\"personnelId\"\r\n                                value={assignmentForm.personnelId}\r\n                                onChange={handleAssignmentChange}\r\n                                required\r\n                            >\r\n                                <option value=\"\">-- Select Personnel --</option>\r\n                                {personnel.map(person => (\r\n                                    <option key={person.id} value={person.id}>\r\n                                        {person.name} ({person.rank})\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"assignmentDate\">Assignment Date:</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                id=\"assignmentDate\"\r\n                                name=\"assignmentDate\"\r\n                                value={assignmentForm.assignmentDate}\r\n                                onChange={handleAssignmentChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"submit-button\">Assign Asset</button>\r\n                </form>\r\n\r\n                <h3 className=\"sub-section-title\">Current Assignments</h3>\r\n                {assignedAssets.length === 0 ? (\r\n                    <p className=\"empty-state\">No assets currently assigned.</p>\r\n                ) : (\r\n                    <div className=\"assignments-table-container\">\r\n                        <table className=\"data-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Asset ID</th>\r\n                                    <th>Asset Name</th>\r\n                                    <th>Assigned To</th>\r\n                                    <th>Rank</th>\r\n                                    <th>Assignment Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {assignedAssets.map(assignment => (\r\n                                    <tr key={assignment._id}> {/* Use MongoDB's _id for the key */}\r\n                                        <td>{assignment.asset.id}</td>\r\n                                        <td>{assignment.asset.name}</td>\r\n                                        <td>{assignment.personnel.name}</td>\r\n                                        <td>{assignment.personnel.rank}</td>\r\n                                        <td>{new Date(assignment.assignmentDate).toLocaleDateString()}</td> {/* Format date for display */}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n            </section>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}